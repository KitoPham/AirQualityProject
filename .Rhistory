library(shiny)
library(dplyr)
library(ggplot)
library(shiny)
library(httr)
library(jsonlite)
library(maps)
library(knitr)
library(ggplot2)
library(dplyr)
library(tidyr)
climate.data <- read.csv("data/GDPcap_ClimateChange_RCP85_SSP5.csv", stringsAsFactors = FALSE)
no.climate.data <- read.csv("data/GDPcap_NOClimateChange_RCP85_SSP5.csv", stringsAsFactors = FALSE)
percent.change <- data.frame(ISO3 = climate.data$ISO3, ISO2 = climate.data$ISO2, Country.Name = climate.data$name, mean.temp = climate.data$meantemp, change = (climate.data[,-(1:4)] - no.climate.data[,-(1:4)])/(no.climate.data[,-(1:4)]))
world.bank.data <- read.csv("data/WorldBank_CountryIndicators.csv", stringsAsFactors = FALSE)
wide.world.bank <- select(world.bank.data, -Series.Name) %>%
spread(key = Series.Code, value = value)
###Readability in column names
reference.world.bank <- select(world.bank.data, -Series.Code) %>%
spread(key = Series.Name, value = value)
temp.agriculture <- left_join(wide.world.bank, climate.data, by = c("Country.Code" = "ISO3", "Country.Name" = "name")) %>%
select(Country.Code, Country.Name, meantemp, Agriculture.Percentage = NV.AGR.TOTL.ZS)
##climate.gdpx2099 <- left_join(wide.world.bank, climate.data, by = c("Country.Code" = "ISO3", "Country.Name" = "name")) %>%
# select(Country.Code, Country.Name, X2050, Agriculture.Percentage = NV.AGR.TOTL.ZS)
#internet.gdpx2099 <- left_join(wide.world.bank, climate.data, by = c("Country.Code" = "ISO3", "Country.Name" = "name")) %>%
#                    select(Country.Code, Country.Name, Internet.Users = IT.NET.USER.P2, X2020, X2040, X2060, X2080)
###Aggriculture Percentage to GDP in 2010, countries with least Agriculture have highest GDP, urbanization
##ggplot(data = climate.gdpx2099, mapping = aes(x = Agriculture.Percentage, y = X2050)) +
##  geom_point( mapping = aes (color = X2050)) +
#  geom_smooth(color = "green")
###Internet Users to GDP in 2050, high users = higher gdp, 1st world country
#ggplot(data = internet.gdpx2099, mapping = aes(x = Internet.Users, y = X2060)) +
#  geom_point( mapping = aes (color = X2060)) +
#  geom_smooth(color = "green")
###Plotting Russia's benefit from climate change
russia.data <- filter(climate.data, ISO3 == "RUS") %>%
gather(key = year,
value = gdp,
X2010,
X2020,
X2030,
X2040,
X2050,
X2060,
X2070,
X2080,
X2090,
X2099) %>%
select(ISO3, name, year, gdp)
#ggplot(data = russia.data) +
# geom_point(mapping = aes(x = year, y = gdp))+
#geom_line(mapping = aes(x = year, y = gdp))
knitr::opts_chunk$set(echo = TRUE)
map.frame = map_data("world") %>%
mutate(ISO2 = iso.alpha(region))
dataUrl <- "https://api.openaq.org/v1/measurements?Parameter=pm25&Date_to=2012-12-12"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
dataUrl <- "https://api.openaq.org/v1/measurements?Parameter=pm25&Date_to=2012-12-12"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
dataUrl <- "https://api.openaq.org/v1/measurements?Parameter=pm25&Date_to=2012-12-12"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
View(airData)
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm25&date_to=2012-12-12"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
library(dplyr)
library(ggplot)
library(shiny)
library(httr)
library(jsonlite)
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm25&date_to=2012-12-12"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData<- flatten(airData$results)
airData<- fromJSON(airData)
dataUrl <- "https://api.openaq.org/v1/measurements?Parameter=pm25&date_to=2012-12-12"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
dataUrl <- "https://api.openaq.org/v1/measurements?Parameter=pm25&date_to=2012-12-12"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData<- fromJSON(airData)
airData <- content(airData,"text")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData<- flatten(airData$results)
airData<- flatten(as.data.frame(airData$results))
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm25&date_to=2012-12-12"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(as.data.frame(airData$results))
airData<- fromJSON(airData)
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm25&date_to=2015-12-20"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(as.data.frame(airData$results))
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm25&date_to=2015-12-20"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(as.data.frame(airData$results))
View(airData)
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm25&Date_to=2015-12-20"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
View(airData)
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm25&date_to=2015-12-20"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
View(airData)
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm25"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
View(airData)
dataUrl <- "https://api.openaq.org/v1/measurements?date_to=2015-12-20"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
dataUrl <- "https://api.openaq.org/v1/measurements?date=2015"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
View(airData)
dataUrl <- "https://api.openaq.org/v1/measurements?country=US&date_to=2015-12-06"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
dataUrl <- "https://api.openaq.org/v1/measurements?country=BR&date_to=2015-12-06"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
dataUrl <- "https://api.openaq.org/v1/measurements?country=BR&date=2015-12-06"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
dataUrl <- "https://api.openaq.org/v1/measurements?country=BR&date_to=2015-12-06"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
map.frame = map_data("world")
library(maps)
map.frame = map_data("world")
library(maps)
map.frame = map_data("world")
library(maps)
library(knitr)
library(ggplot2)
library(dplyr)
library(tidyr)
map.frame = map_data("world")
dataUrl <- "https://api.openaq.org/v1/measurements?country=BR&date_to=2015-12-06&coordinates"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
View(airData)
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=p,m25&date_to=2015-12-06"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm25&date_to=2015-12-06"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
View(airData)
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = coordinates.longitude, y = coordinates.latitude, fill = value)) +
scale_fill_brewer(palette = "YlOrRd") +
coord_quickmap()
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = coordinates.longitude, y = coordinates.latitude, fill = value)) +
coord_quickmap()
View(map.frame)
View(airData)
View(map.frame)
library(rworldmap)
install.packages(rworldmap)
install.packages("rworldmap")
airData <- joinCountryData2Map(airData, joinCode="ISO", nameJoinColumn="country")
library(rworldmap)
vignetter('rworldmap')
vignette('rworldmap')
airData <- joinCountryData2Map(airData, joinCode="ISO2", nameJoinColumn="country")
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = coordinates.longitude, y = coordinates.latitude, fill = value)) +
coord_quickmap()
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = longitude, y = latitude, fill = value)) +
coord_quickmap()
airData <- joinCountryData2Map(airData, joinCode="ISO2", nameJoinColumn="country",stringAsFactor=False)
airData <- joinCountryData2Map(airData, joinCode="ISO2", nameJoinColumn="country",stringAsFactor=FALSE)
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm25&date_to=2015-12-06"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
library(maps)
map.frame <- mapCountryData()
airData <- left_join(airData,map.frame, country = ISO2)
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm25&date_to=2015-12-06"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
map.frame <- map_data("world") %>%
mutate(ISO2 = iso.alpha(region))
View(map.frame)
airData <- left_join(airData,map.frame, airData$country = map.frame$ISO2)
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm25&date_to=2015-12-06"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
map.frame <- map_data("world") %>%
mutate(country = iso.alpha(region))
airData <- left_join(airData,map.frame)
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = longitude, y = latitude, fill = value)) +
coord_quickmap()
View(airData)
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, fill = value)) +
coord_quickmap()
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
coord_quickmap()
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = lat, y = long, group = group, fill = value)) +
coord_quickmap()
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = coordinates.longitude, y = coordinates.latitude, group = group, fill = value)) +
coord_quickmap()
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
coord_quickmap()
View(airData)
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm25&date_to=2015-12-06"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData<- group_by(country) %>%
summarize(value = mean(value))
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm25&date_to=2015-12-06"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData<- group_by(country) %>%
summarize(value = mean(value))
airData<- group_by(airData,country) %>%
summarize(value = mean(value))
map.frame <- map_data("world") %>%
mutate(country = iso.alpha(region))
airData <- left_join(airData,map.frame)
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
coord_quickmap()
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm25&date_to=2015-12-06"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData<- group_by(airData,country) %>%
summarize(value = mean(value))
map.frame <- map_data("world") %>%
mutate(country = iso.alpha(region))
airData <- left_join(map.frame,airData)
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
coord_quickmap()
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
coord_quickmap() +
facet_wrap(country)
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
coord_quickmap() +
facet_wrap(airData, country)
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
coord_quickmap() +
facet_wrap(~airData, country)
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
coord_quickmap() +
facet_wrap(~country)
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm25&date_to=2015-12-06"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData<- group_by(airData,country) %>%
summarize(value = mean(value))
map.frame <- map_data("world") %>%
mutate(country = iso.alpha(region))
airData <- left_join(map.frame,airData)
ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
coord_quickmap()
