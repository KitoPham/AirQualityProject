return (input$date)
})
output$plot<-renderPlot({
dataUrl<-paste(urlParameter,"pm25&date_to=",dateInput(),sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData<- group_by(airData,country) %>%
summarize(value = mean(value))
mapCopy <- map.frame
airData <- left_join(mapCopy,airData)
plot <- ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
coord_quickmap()
return(plot)
})
#onclick change to country clicked
}
runApp()
shiny::runApp()
dataUrl <- "https://api.openaq.org/v1/measurements?parameter=pm10&limit=10000&order_by=date&sort=desc"
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
View(airData)
airData
airData<- group_by(airData,country) %>%
summarize(value = mean(value))
data.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&date_to=",input$date,sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})
output$plot<-renderPlot({
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
mapCopy <- map.frame
airData <- left_join(mapCopy,airData)
plot <- ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
coord_quickmap()
return(plot)
})
}
my.server<-function(input,output){
#https://api.openaq.org/v1/measurements?parameter= (ui.dropdown input, ex= pm25)
map.frame <- map_data("world") %>%
mutate(country = iso.alpha(region))
urlHeader <- "https://api.openaq.org/v1/measurements"
urlParameter<-paste(urlHeader,"?parameter=",sep="")
#append url with & date_to of slider input (use latest)
data.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&date_to=",input$date,sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})
output$plot<-renderPlot({
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
mapCopy <- map.frame
airData <- left_join(mapCopy,airData)
plot <- ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
coord_quickmap()
return(plot)
})
#onclick change to country clicked
}
runApp()
ar.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})
ar.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})us.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})
ar.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})output$plot<-renderPlot({
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
mapCopy <- map.frame
airData <- left_join(mapCopy,airData)
plot <- ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
coord_quickmap()
return(plot)
})
ar.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})#onclick change to country clicked
my.server<-function(input,output){
#https://api.openaq.org/v1/measurements?parameter= (ui.dropdown input, ex= pm25)
map.frame <- map_data("world") %>%
mutate(country = iso.alpha(region))
urlHeader <- "https://api.openaq.org/v1/measurements"
urlParameter<-paste(urlHeader,"?parameter=",sep="")
#append url with & date_to of slider input (use latest)
ar.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})
ar.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})
ar.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})
ar.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})
ar.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})
ar.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})us.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})
ar.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})output$plot<-renderPlot({
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
mapCopy <- map.frame
airData <- left_join(mapCopy,airData)
plot <- ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
coord_quickmap()
return(plot)
})
ar.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})#onclick change to country clicked
}
ar.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
nl.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","NL",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
no.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","NO",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
np.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","NP",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
pe.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","PE",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
ph.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","ph",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
us.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})
pl.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","PL",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
se.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","SE",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
sg.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","SG",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
th.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","TH",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
tr.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","TR",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
tw.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","TW",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
ug.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","UG",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
vn.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","VN",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
XK.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","xk",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
output$plot<-renderPlot({
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
mapCopy <- map.frame
airData <- left_join(mapCopy,airData)
plot <- ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
coord_quickmap()
return(plot)
})
#onclick change to country clicked
}
my.server<-function(input,output){
#https://api.openaq.org/v1/measurements?parameter= (ui.dropdown input, ex= pm25)
map.frame <- map_data("world") %>%
mutate(country = iso.alpha(region))
urlHeader <- "https://api.openaq.org/v1/measurements"
urlParameter<-paste(urlHeader,"?parameter=",sep="")
#append url with & date_to of slider input (use latest)
ar.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
nl.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","NL",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
no.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","NO",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
np.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","NP",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
pe.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","PE",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
ph.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","ph",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
us.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","US",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
})
pl.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","PL",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
se.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","SE",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
sg.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","SG",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
th.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","TH",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
tr.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","TR",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
tw.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","TW",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
ug.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","UG",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
vn.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","VN",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
XK.frame <- reactive({
dataUrl<-paste(urlParameter,input$parameter,"&limit=10000&country?=","xk",sep="")
airData <- GET(dataUrl)
airData <- content(airData,"text")
airData<- fromJSON(airData)
airData<- flatten(airData$results)
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
})
output$plot<-renderPlot({
airData <- group_by(data.frame(),country) %>%
summarize(value = mean(value))
mapCopy <- map.frame
airData <- left_join(mapCopy,airData)
plot <- ggplot(data = airData, na.rm = TRUE) +
geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
coord_quickmap()
return(plot)
})
#onclick change to country clicked
}
